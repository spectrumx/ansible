---
- hosts: localhost
  tasks:

  - name: Get GPG key for kitware repo (for cmake)
    shell:  wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null


  - name: Add deadsnakes PPA
    apt_repository:
      repo: ppa:deadsnakes/ppa
      state: present

  - name: Add mozillateam PPA
    apt_repository:
      repo: ppa:mozillateam/ppa
      state: present

  - name: copy mozilla-firefox to /etc/apt/preferences.d
    copy:
      src: "files/apt-preferences-mozilla-firefox"
      dest: /etc/apt/preferences.d/mozilla-firefox
      mode: 0644
      owner: root
      group: root

  - name: Disable unattended upgrades for firefox
    lineinfile:
      path: /etc/apt/apt.conf.d/51unattended-upgrades-firefox
      state: present
      create: true
      regexp: '^Unattended-Upgrade'
      line: 'Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";'

  - name: Update apt cache
    apt:
      update_cache: yes

  - name: Install Dependencies (Apt)
    apt:
      pkg:
          - libhdf5-dev
          - mosquitto-clients
          - host
          - dnsutils
          - screen
          - telnet
          - chrony
          #- telegraf
          #- influxdb
          #- influxdb-client
          - vim
          - nano
          - less
          - file
          - telnet
          - iptables
          - python3-pip
          - cmake
          - xorg-dev
          - libboost-all-dev
          - minicom
          - net-tools
          - iftop
          - backport-iwlwifi-dkms
          - firefox
          - python3.13
          - python3.13-dev
          - python3.13-venv
          # docker
          - nvidia-container
          - docker-buildx
          - docker-compose-v2
          - docker.io
          # tuner control
          - libusb-1.0-0
      state: present
      update_cache: yes

  - name: Create a virtual environment
    command: python3.13 -m venv /opt/radiohound/python313

  - name: Install Icarus Dependencies (Pip)
    pip:
      name:
        - paho-mqtt>=1.5.1
        - requests>=2.26.0
        - serial>=0.0.97
        - schedule>=0.6.0
        - inotify>=0.2.10
        - scipy>=1.8.0
        - pytz>=2022.1
        - numpy>=1.22.3
        - pyvisa>=1.12.0
        - PyVISA-py>=0.5.3
        - psutil>=6.0.0
        - gps>=3.19
        - digital_rf
        - spectrumx
        - docker
        # tuner control
        - adafruit-blinka
        # rfsoc control
        - pyzmq
      state: present
      virtualenv: /opt/radiohound/python313
      virtualenv_python: python

  - name: Gather Docker runtimes
    shell: docker info | grep -E "Runtimes:.*"
    register: docker_runtimes
    ignore_errors: yes

  - name: Restart Docker to load nvidia-container
    when: "'nvidia' not in docker_runtimes.stdout"
    shell:  service docker restart

  - name: Create /opt/afe AFE software
    file:
      path: /opt/afe
      state: directory
      owner: mep
      group: mep
      mode: 0777

  - name: copy afe_service software
    copy:
      src: "files/afe_service.py"
      dest: "/opt/afe/afe_service.py"
      mode: 0755
      owner: mep
      group: mep

  - name: copy afe_control service
    copy:
      src: "files/afe_control.service"
      dest: "/etc/systemd/system/afe_control.service"
      mode: 0644
      owner: root
      group: root
    notify:
      - systemctl reload
      - start afe_control

  # system_mem_guard is a temporary solution that should be removed when
  # the memory hog is tracked down and fixed
  - name: copy system_mem_guard script
    copy:
      src: "files/system_mem_guard.bash"
      dest: "/opt/system_mem_guard.bash"
      mode: 0755
      owner: root
      group: root

  - name: copy system_mem_guard.service
    copy:
      src: "files/system_mem_guard.service"
      dest: "/etc/systemd/system/system_mem_guard.service"
      mode: 0644
      owner: root
      group: root
    notify:
      - systemctl reload
      - start system_mem_guard

  - name: Remove unnecessary packages
    apt:
      pkg:
        - gnome-initial-setup
        - nftables
      state: absent

  handlers:

  - name: systemctl reload
    shell: /bin/systemctl daemon-reload

  - name: start afe_control
    systemd:
      name: afe_control.service
      state: started
      enabled: yes

  - name: start system_mem_guard
    systemd:
      name: system_mem_guard.service
      state: started
      enabled: yes


